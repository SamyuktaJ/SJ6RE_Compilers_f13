Terminals unused in grammar

   T_LessEqual
   T_GreaterEqual
   T_Equal
   T_NotEqual
   T_And
   T_Or
   T_Null
   T_This
   T_Interface
   T_While
   T_For
   T_If
   T_Else
   T_Return
   T_Break
   T_New
   T_NewArray
   T_Print
   T_ReadInteger
   T_ReadLine
   T_StringConstant
   T_IntConstant
   T_DoubleConstant
   T_BoolConstant


State 0 conflicts: 7 shift/reduce
State 9 conflicts: 7 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: DeclList

    2 DeclList: DeclList Decl
    3         | Decl

    4 Decl: VarDecl
    5     | FnDecl
    6     | ClassDecl
    7     | InterfaceDecl

    8 VarDecl: Variable ';'

    9 Variable: Type T_Identifier

   10 Type: T_Int
   11     | T_Bool
   12     | T_String
   13     | T_Double
   14     | T_Identifier
   15     | Type T_Dims

   16 FnDecl: FnHeader StmtBlock

   17 FnHeader: Type T_Identifier '(' Formals ')'
   18         | T_Void T_Identifier '(' Formals ')'

   19 Formals: FormalList
   20        | /* empty */

   21 FormalList: FormalList ',' Variable
   22           | Variable

   23 ClassDecl: T_Class T_Identifier ClassParent ClassInterface '{' FieldO '}'

   24 ClassParent: T_Extends T_Identifier
   25            | /* empty */

   26 ClassInterface: T_Implements InterfaceList
   27               | /* empty */

   28 InterfaceList: InterfaceList ',' T_Identifier
   29              | T_Identifier

   30 Field: VarDecl
   31      | FnDecl

   32 FieldO: FieldO Field
   33       | /* empty */

   34 InterfaceDecl: /* empty */

   35 StmtBlock: '{' VarDecls StmtList '}'

   36 VarDecls: VarDecls VarDecl
   37         | /* empty */

   38 StmtList: /* empty */


Terminals, with rules where they appear

$end (0) 0
'(' (40) 17 18
')' (41) 17 18
',' (44) 21 28
';' (59) 8
'{' (123) 23 35
'}' (125) 23 35
error (256)
T_Void (258) 18
T_Bool (259) 11
T_Int (260) 10
T_Double (261) 13
T_String (262) 12
T_Class (263) 23
T_LessEqual (264)
T_GreaterEqual (265)
T_Equal (266)
T_NotEqual (267)
T_Dims (268) 15
T_And (269)
T_Or (270)
T_Null (271)
T_Extends (272) 24
T_This (273)
T_Interface (274)
T_Implements (275) 26
T_While (276)
T_For (277)
T_If (278)
T_Else (279)
T_Return (280)
T_Break (281)
T_New (282)
T_NewArray (283)
T_Print (284)
T_ReadInteger (285)
T_ReadLine (286)
T_Identifier (287) 9 14 17 18 23 24 28 29
T_StringConstant (288)
T_IntConstant (289)
T_DoubleConstant (290)
T_BoolConstant (291)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
Program (44)
    on left: 1, on right: 0
DeclList (45)
    on left: 2 3, on right: 1 2
Decl (46)
    on left: 4 5 6 7, on right: 2 3
VarDecl (47)
    on left: 8, on right: 4 30 36
Variable (48)
    on left: 9, on right: 8 21 22
Type (49)
    on left: 10 11 12 13 14 15, on right: 9 15 17
FnDecl (50)
    on left: 16, on right: 5 31
FnHeader (51)
    on left: 17 18, on right: 16
Formals (52)
    on left: 19 20, on right: 17 18
FormalList (53)
    on left: 21 22, on right: 19 21
ClassDecl (54)
    on left: 23, on right: 6
ClassParent (55)
    on left: 24 25, on right: 23
ClassInterface (56)
    on left: 26 27, on right: 23
InterfaceList (57)
    on left: 28 29, on right: 26 28
Field (58)
    on left: 30 31, on right: 32
FieldO (59)
    on left: 32 33, on right: 23 32
InterfaceDecl (60)
    on left: 34, on right: 7
StmtBlock (61)
    on left: 35, on right: 16
VarDecls (62)
    on left: 36 37, on right: 35 36
StmtList (63)
    on left: 38, on right: 35


state 0

    0 $accept: . Program $end

    T_Void        shift, and go to state 1
    T_Bool        shift, and go to state 2
    T_Int         shift, and go to state 3
    T_Double      shift, and go to state 4
    T_String      shift, and go to state 5
    T_Class       shift, and go to state 6
    T_Identifier  shift, and go to state 7

    T_Void        [reduce using rule 34 (InterfaceDecl)]
    T_Bool        [reduce using rule 34 (InterfaceDecl)]
    T_Int         [reduce using rule 34 (InterfaceDecl)]
    T_Double      [reduce using rule 34 (InterfaceDecl)]
    T_String      [reduce using rule 34 (InterfaceDecl)]
    T_Class       [reduce using rule 34 (InterfaceDecl)]
    T_Identifier  [reduce using rule 34 (InterfaceDecl)]
    $default      reduce using rule 34 (InterfaceDecl)

    Program        go to state 8
    DeclList       go to state 9
    Decl           go to state 10
    VarDecl        go to state 11
    Variable       go to state 12
    Type           go to state 13
    FnDecl         go to state 14
    FnHeader       go to state 15
    ClassDecl      go to state 16
    InterfaceDecl  go to state 17


state 1

   18 FnHeader: T_Void . T_Identifier '(' Formals ')'

    T_Identifier  shift, and go to state 18


state 2

   11 Type: T_Bool .

    $default  reduce using rule 11 (Type)


state 3

   10 Type: T_Int .

    $default  reduce using rule 10 (Type)


state 4

   13 Type: T_Double .

    $default  reduce using rule 13 (Type)


state 5

   12 Type: T_String .

    $default  reduce using rule 12 (Type)


state 6

   23 ClassDecl: T_Class . T_Identifier ClassParent ClassInterface '{' FieldO '}'

    T_Identifier  shift, and go to state 19


state 7

   14 Type: T_Identifier .

    $default  reduce using rule 14 (Type)


state 8

    0 $accept: Program . $end

    $end  shift, and go to state 20


state 9

    1 Program: DeclList .
    2 DeclList: DeclList . Decl

    T_Void        shift, and go to state 1
    T_Bool        shift, and go to state 2
    T_Int         shift, and go to state 3
    T_Double      shift, and go to state 4
    T_String      shift, and go to state 5
    T_Class       shift, and go to state 6
    T_Identifier  shift, and go to state 7

    $end          reduce using rule 1 (Program)
    $end          [reduce using rule 34 (InterfaceDecl)]
    T_Void        [reduce using rule 34 (InterfaceDecl)]
    T_Bool        [reduce using rule 34 (InterfaceDecl)]
    T_Int         [reduce using rule 34 (InterfaceDecl)]
    T_Double      [reduce using rule 34 (InterfaceDecl)]
    T_String      [reduce using rule 34 (InterfaceDecl)]
    T_Class       [reduce using rule 34 (InterfaceDecl)]
    T_Identifier  [reduce using rule 34 (InterfaceDecl)]
    $default      reduce using rule 1 (Program)

    Decl           go to state 21
    VarDecl        go to state 11
    Variable       go to state 12
    Type           go to state 13
    FnDecl         go to state 14
    FnHeader       go to state 15
    ClassDecl      go to state 16
    InterfaceDecl  go to state 17


state 10

    3 DeclList: Decl .

    $default  reduce using rule 3 (DeclList)


state 11

    4 Decl: VarDecl .

    $default  reduce using rule 4 (Decl)


state 12

    8 VarDecl: Variable . ';'

    ';'  shift, and go to state 22


state 13

    9 Variable: Type . T_Identifier
   15 Type: Type . T_Dims
   17 FnHeader: Type . T_Identifier '(' Formals ')'

    T_Dims        shift, and go to state 23
    T_Identifier  shift, and go to state 24


state 14

    5 Decl: FnDecl .

    $default  reduce using rule 5 (Decl)


state 15

   16 FnDecl: FnHeader . StmtBlock

    '{'  shift, and go to state 25

    StmtBlock  go to state 26


state 16

    6 Decl: ClassDecl .

    $default  reduce using rule 6 (Decl)


state 17

    7 Decl: InterfaceDecl .

    $default  reduce using rule 7 (Decl)


state 18

   18 FnHeader: T_Void T_Identifier . '(' Formals ')'

    '('  shift, and go to state 27


state 19

   23 ClassDecl: T_Class T_Identifier . ClassParent ClassInterface '{' FieldO '}'

    T_Extends  shift, and go to state 28

    $default  reduce using rule 25 (ClassParent)

    ClassParent  go to state 29


state 20

    0 $accept: Program $end .

    $default  accept


state 21

    2 DeclList: DeclList Decl .

    $default  reduce using rule 2 (DeclList)


state 22

    8 VarDecl: Variable ';' .

    $default  reduce using rule 8 (VarDecl)


state 23

   15 Type: Type T_Dims .

    $default  reduce using rule 15 (Type)


state 24

    9 Variable: Type T_Identifier .
   17 FnHeader: Type T_Identifier . '(' Formals ')'

    '('  shift, and go to state 30

    $default  reduce using rule 9 (Variable)


state 25

   35 StmtBlock: '{' . VarDecls StmtList '}'

    $default  reduce using rule 37 (VarDecls)

    VarDecls  go to state 31


state 26

   16 FnDecl: FnHeader StmtBlock .

    $default  reduce using rule 16 (FnDecl)


state 27

   18 FnHeader: T_Void T_Identifier '(' . Formals ')'

    T_Bool        shift, and go to state 2
    T_Int         shift, and go to state 3
    T_Double      shift, and go to state 4
    T_String      shift, and go to state 5
    T_Identifier  shift, and go to state 7

    $default  reduce using rule 20 (Formals)

    Variable    go to state 32
    Type        go to state 33
    Formals     go to state 34
    FormalList  go to state 35


state 28

   24 ClassParent: T_Extends . T_Identifier

    T_Identifier  shift, and go to state 36


state 29

   23 ClassDecl: T_Class T_Identifier ClassParent . ClassInterface '{' FieldO '}'

    T_Implements  shift, and go to state 37

    $default  reduce using rule 27 (ClassInterface)

    ClassInterface  go to state 38


state 30

   17 FnHeader: Type T_Identifier '(' . Formals ')'

    T_Bool        shift, and go to state 2
    T_Int         shift, and go to state 3
    T_Double      shift, and go to state 4
    T_String      shift, and go to state 5
    T_Identifier  shift, and go to state 7

    $default  reduce using rule 20 (Formals)

    Variable    go to state 32
    Type        go to state 33
    Formals     go to state 39
    FormalList  go to state 35


state 31

   35 StmtBlock: '{' VarDecls . StmtList '}'
   36 VarDecls: VarDecls . VarDecl

    T_Bool        shift, and go to state 2
    T_Int         shift, and go to state 3
    T_Double      shift, and go to state 4
    T_String      shift, and go to state 5
    T_Identifier  shift, and go to state 7

    $default  reduce using rule 38 (StmtList)

    VarDecl   go to state 40
    Variable  go to state 12
    Type      go to state 33
    StmtList  go to state 41


state 32

   22 FormalList: Variable .

    $default  reduce using rule 22 (FormalList)


state 33

    9 Variable: Type . T_Identifier
   15 Type: Type . T_Dims

    T_Dims        shift, and go to state 23
    T_Identifier  shift, and go to state 42


state 34

   18 FnHeader: T_Void T_Identifier '(' Formals . ')'

    ')'  shift, and go to state 43


state 35

   19 Formals: FormalList .
   21 FormalList: FormalList . ',' Variable

    ','  shift, and go to state 44

    $default  reduce using rule 19 (Formals)


state 36

   24 ClassParent: T_Extends T_Identifier .

    $default  reduce using rule 24 (ClassParent)


state 37

   26 ClassInterface: T_Implements . InterfaceList

    T_Identifier  shift, and go to state 45

    InterfaceList  go to state 46


state 38

   23 ClassDecl: T_Class T_Identifier ClassParent ClassInterface . '{' FieldO '}'

    '{'  shift, and go to state 47


state 39

   17 FnHeader: Type T_Identifier '(' Formals . ')'

    ')'  shift, and go to state 48


state 40

   36 VarDecls: VarDecls VarDecl .

    $default  reduce using rule 36 (VarDecls)


state 41

   35 StmtBlock: '{' VarDecls StmtList . '}'

    '}'  shift, and go to state 49


state 42

    9 Variable: Type T_Identifier .

    $default  reduce using rule 9 (Variable)


state 43

   18 FnHeader: T_Void T_Identifier '(' Formals ')' .

    $default  reduce using rule 18 (FnHeader)


state 44

   21 FormalList: FormalList ',' . Variable

    T_Bool        shift, and go to state 2
    T_Int         shift, and go to state 3
    T_Double      shift, and go to state 4
    T_String      shift, and go to state 5
    T_Identifier  shift, and go to state 7

    Variable  go to state 50
    Type      go to state 33


state 45

   29 InterfaceList: T_Identifier .

    $default  reduce using rule 29 (InterfaceList)


state 46

   26 ClassInterface: T_Implements InterfaceList .
   28 InterfaceList: InterfaceList . ',' T_Identifier

    ','  shift, and go to state 51

    $default  reduce using rule 26 (ClassInterface)


state 47

   23 ClassDecl: T_Class T_Identifier ClassParent ClassInterface '{' . FieldO '}'

    $default  reduce using rule 33 (FieldO)

    FieldO  go to state 52


state 48

   17 FnHeader: Type T_Identifier '(' Formals ')' .

    $default  reduce using rule 17 (FnHeader)


state 49

   35 StmtBlock: '{' VarDecls StmtList '}' .

    $default  reduce using rule 35 (StmtBlock)


state 50

   21 FormalList: FormalList ',' Variable .

    $default  reduce using rule 21 (FormalList)


state 51

   28 InterfaceList: InterfaceList ',' . T_Identifier

    T_Identifier  shift, and go to state 53


state 52

   23 ClassDecl: T_Class T_Identifier ClassParent ClassInterface '{' FieldO . '}'
   32 FieldO: FieldO . Field

    T_Void        shift, and go to state 1
    T_Bool        shift, and go to state 2
    T_Int         shift, and go to state 3
    T_Double      shift, and go to state 4
    T_String      shift, and go to state 5
    T_Identifier  shift, and go to state 7
    '}'           shift, and go to state 54

    VarDecl   go to state 55
    Variable  go to state 12
    Type      go to state 13
    FnDecl    go to state 56
    FnHeader  go to state 15
    Field     go to state 57


state 53

   28 InterfaceList: InterfaceList ',' T_Identifier .

    $default  reduce using rule 28 (InterfaceList)


state 54

   23 ClassDecl: T_Class T_Identifier ClassParent ClassInterface '{' FieldO '}' .

    $default  reduce using rule 23 (ClassDecl)


state 55

   30 Field: VarDecl .

    $default  reduce using rule 30 (Field)


state 56

   31 Field: FnDecl .

    $default  reduce using rule 31 (Field)


state 57

   32 FieldO: FieldO Field .

    $default  reduce using rule 32 (FieldO)
